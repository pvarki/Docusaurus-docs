# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  hasReferences: Boolean
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  pages(relativePath: String): Pages!
  pagesConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PagesFilter): PagesConnection!
  decks(relativePath: String): Decks!
  decksConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: DecksFilter): DecksConnection!
  sidebars(relativePath: String): Sidebars!
  sidebarsConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: SidebarsFilter): SidebarsConnection!
}

input DocumentFilter {
  pages: PagesFilter
  decks: DecksFilter
  sidebars: SidebarsFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Pages | Decks | Sidebars | Folder

type Pages implements Node & Document {
  title: String
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input PagesFilter {
  title: StringFilter
  body: RichTextFilter
}

type PagesConnectionEdges {
  cursor: String!
  node: Pages
}

type PagesConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PagesConnectionEdges]
}

type Decks implements Node & Document {
  title: String
  deckPath: String!
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input DecksFilter {
  title: StringFilter
  deckPath: StringFilter
  body: RichTextFilter
}

type DecksConnectionEdges {
  cursor: String!
  node: Decks
}

type DecksConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DecksConnectionEdges]
}

type SidebarsDaSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsDaSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsDaSidebarItems]
}

type SidebarsTakSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsTakSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsTakSidebarItems]
}

type SidebarsBlSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsBlSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsBlSidebarItems]
}

type SidebarsIosDaSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsIosDaSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsIosDaSidebarItems]
}

type SidebarsIosTakSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsIosTakSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsIosTakSidebarItems]
}

type SidebarsIosBlSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsIosBlSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsIosBlSidebarItems]
}

type SidebarsWinDaSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsWinDaSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsWinDaSidebarItems]
}

type SidebarsWinTakSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsWinTakSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsWinTakSidebarItems]
}

type SidebarsWinBlSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsWinBlSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsWinBlSidebarItems]
}

type SidebarsDevSidebarItems {
  type: String
  id: String
  label: String
}

type SidebarsDevSidebar {
  type: String!
  id: String
  label: String!
  collapsed: Boolean
  items: [SidebarsDevSidebarItems]
}

type Sidebars implements Node & Document {
  daSidebar: [SidebarsDaSidebar]
  takSidebar: [SidebarsTakSidebar]
  blSidebar: [SidebarsBlSidebar]
  iosDaSidebar: [SidebarsIosDaSidebar]
  iosTakSidebar: [SidebarsIosTakSidebar]
  iosBlSidebar: [SidebarsIosBlSidebar]
  winDaSidebar: [SidebarsWinDaSidebar]
  winTakSidebar: [SidebarsWinTakSidebar]
  winBlSidebar: [SidebarsWinBlSidebar]
  devSidebar: [SidebarsDevSidebar]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input SidebarsDaSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsDaSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsDaSidebarItemsFilter
}

input SidebarsTakSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsTakSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsTakSidebarItemsFilter
}

input SidebarsBlSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsBlSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsBlSidebarItemsFilter
}

input SidebarsIosDaSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsIosDaSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsIosDaSidebarItemsFilter
}

input SidebarsIosTakSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsIosTakSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsIosTakSidebarItemsFilter
}

input SidebarsIosBlSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsIosBlSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsIosBlSidebarItemsFilter
}

input SidebarsWinDaSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsWinDaSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsWinDaSidebarItemsFilter
}

input SidebarsWinTakSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsWinTakSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsWinTakSidebarItemsFilter
}

input SidebarsWinBlSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsWinBlSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsWinBlSidebarItemsFilter
}

input SidebarsDevSidebarItemsFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
}

input SidebarsDevSidebarFilter {
  type: StringFilter
  id: StringFilter
  label: StringFilter
  collapsed: BooleanFilter
  items: SidebarsDevSidebarItemsFilter
}

input SidebarsFilter {
  daSidebar: SidebarsDaSidebarFilter
  takSidebar: SidebarsTakSidebarFilter
  blSidebar: SidebarsBlSidebarFilter
  iosDaSidebar: SidebarsIosDaSidebarFilter
  iosTakSidebar: SidebarsIosTakSidebarFilter
  iosBlSidebar: SidebarsIosBlSidebarFilter
  winDaSidebar: SidebarsWinDaSidebarFilter
  winTakSidebar: SidebarsWinTakSidebarFilter
  winBlSidebar: SidebarsWinBlSidebarFilter
  devSidebar: SidebarsDevSidebarFilter
}

type SidebarsConnectionEdges {
  cursor: String!
  node: Sidebars
}

type SidebarsConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [SidebarsConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createFolder(collection: String, relativePath: String!): DocumentNode!
  updatePages(relativePath: String!, params: PagesMutation!): Pages!
  createPages(relativePath: String!, params: PagesMutation!): Pages!
  updateDecks(relativePath: String!, params: DecksMutation!): Decks!
  createDecks(relativePath: String!, params: DecksMutation!): Decks!
  updateSidebars(relativePath: String!, params: SidebarsMutation!): Sidebars!
  createSidebars(relativePath: String!, params: SidebarsMutation!): Sidebars!
}

input DocumentUpdateMutation {
  pages: PagesMutation
  decks: DecksMutation
  sidebars: SidebarsMutation
  relativePath: String
}

input DocumentMutation {
  pages: PagesMutation
  decks: DecksMutation
  sidebars: SidebarsMutation
}

input PagesMutation {
  title: String
  body: JSON
}

input DecksMutation {
  title: String
  deckPath: String
  body: JSON
}

input SidebarsDaSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsDaSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsDaSidebarItemsMutation]
}

input SidebarsTakSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsTakSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsTakSidebarItemsMutation]
}

input SidebarsBlSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsBlSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsBlSidebarItemsMutation]
}

input SidebarsIosDaSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsIosDaSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsIosDaSidebarItemsMutation]
}

input SidebarsIosTakSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsIosTakSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsIosTakSidebarItemsMutation]
}

input SidebarsIosBlSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsIosBlSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsIosBlSidebarItemsMutation]
}

input SidebarsWinDaSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsWinDaSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsWinDaSidebarItemsMutation]
}

input SidebarsWinTakSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsWinTakSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsWinTakSidebarItemsMutation]
}

input SidebarsWinBlSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsWinBlSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsWinBlSidebarItemsMutation]
}

input SidebarsDevSidebarItemsMutation {
  type: String
  id: String
  label: String
}

input SidebarsDevSidebarMutation {
  type: String
  id: String
  label: String
  collapsed: Boolean
  items: [SidebarsDevSidebarItemsMutation]
}

input SidebarsMutation {
  daSidebar: [SidebarsDaSidebarMutation]
  takSidebar: [SidebarsTakSidebarMutation]
  blSidebar: [SidebarsBlSidebarMutation]
  iosDaSidebar: [SidebarsIosDaSidebarMutation]
  iosTakSidebar: [SidebarsIosTakSidebarMutation]
  iosBlSidebar: [SidebarsIosBlSidebarMutation]
  winDaSidebar: [SidebarsWinDaSidebarMutation]
  winTakSidebar: [SidebarsWinTakSidebarMutation]
  winBlSidebar: [SidebarsWinBlSidebarMutation]
  devSidebar: [SidebarsDevSidebarMutation]
}

schema {
  query: Query
  mutation: Mutation
}
