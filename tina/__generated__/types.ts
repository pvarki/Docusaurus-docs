//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  hasReferences?: Maybe<Scalars['Boolean']['output']>;
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  pages: Pages;
  pagesConnection: PagesConnection;
  decks: Decks;
  decksConnection: DecksConnection;
  sidebars: Sidebars;
  sidebarsConnection: SidebarsConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPagesArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPagesConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PagesFilter>;
};


export type QueryDecksArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDecksConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DecksFilter>;
};


export type QuerySidebarsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySidebarsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SidebarsFilter>;
};

export type DocumentFilter = {
  pages?: InputMaybe<PagesFilter>;
  decks?: InputMaybe<DecksFilter>;
  sidebars?: InputMaybe<SidebarsFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = Pages | Decks | Sidebars | Folder;

export type Pages = Node & Document & {
  __typename?: 'Pages';
  title?: Maybe<Scalars['String']['output']>;
  body?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PagesFilter = {
  title?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type PagesConnectionEdges = {
  __typename?: 'PagesConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Pages>;
};

export type PagesConnection = Connection & {
  __typename?: 'PagesConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<PagesConnectionEdges>>>;
};

export type Decks = Node & Document & {
  __typename?: 'Decks';
  title?: Maybe<Scalars['String']['output']>;
  deckPath: Scalars['String']['output'];
  body?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type DecksFilter = {
  title?: InputMaybe<StringFilter>;
  deckPath?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type DecksConnectionEdges = {
  __typename?: 'DecksConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Decks>;
};

export type DecksConnection = Connection & {
  __typename?: 'DecksConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DecksConnectionEdges>>>;
};

export type SidebarsDaSidebarItems = {
  __typename?: 'SidebarsDaSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsDaSidebar = {
  __typename?: 'SidebarsDaSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsDaSidebarItems>>>;
};

export type SidebarsTakSidebarItems = {
  __typename?: 'SidebarsTakSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsTakSidebar = {
  __typename?: 'SidebarsTakSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsTakSidebarItems>>>;
};

export type SidebarsBlSidebarItems = {
  __typename?: 'SidebarsBlSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsBlSidebar = {
  __typename?: 'SidebarsBlSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsBlSidebarItems>>>;
};

export type SidebarsIosDaSidebarItems = {
  __typename?: 'SidebarsIosDaSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsIosDaSidebar = {
  __typename?: 'SidebarsIosDaSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsIosDaSidebarItems>>>;
};

export type SidebarsIosTakSidebarItems = {
  __typename?: 'SidebarsIosTakSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsIosTakSidebar = {
  __typename?: 'SidebarsIosTakSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsIosTakSidebarItems>>>;
};

export type SidebarsIosBlSidebarItems = {
  __typename?: 'SidebarsIosBlSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsIosBlSidebar = {
  __typename?: 'SidebarsIosBlSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsIosBlSidebarItems>>>;
};

export type SidebarsWinDaSidebarItems = {
  __typename?: 'SidebarsWinDaSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsWinDaSidebar = {
  __typename?: 'SidebarsWinDaSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsWinDaSidebarItems>>>;
};

export type SidebarsWinTakSidebarItems = {
  __typename?: 'SidebarsWinTakSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsWinTakSidebar = {
  __typename?: 'SidebarsWinTakSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsWinTakSidebarItems>>>;
};

export type SidebarsWinBlSidebarItems = {
  __typename?: 'SidebarsWinBlSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsWinBlSidebar = {
  __typename?: 'SidebarsWinBlSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsWinBlSidebarItems>>>;
};

export type SidebarsDevSidebarItems = {
  __typename?: 'SidebarsDevSidebarItems';
  type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type SidebarsDevSidebar = {
  __typename?: 'SidebarsDevSidebar';
  type: Scalars['String']['output'];
  id?: Maybe<Scalars['String']['output']>;
  label: Scalars['String']['output'];
  collapsed?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<SidebarsDevSidebarItems>>>;
};

export type Sidebars = Node & Document & {
  __typename?: 'Sidebars';
  daSidebar?: Maybe<Array<Maybe<SidebarsDaSidebar>>>;
  takSidebar?: Maybe<Array<Maybe<SidebarsTakSidebar>>>;
  blSidebar?: Maybe<Array<Maybe<SidebarsBlSidebar>>>;
  iosDaSidebar?: Maybe<Array<Maybe<SidebarsIosDaSidebar>>>;
  iosTakSidebar?: Maybe<Array<Maybe<SidebarsIosTakSidebar>>>;
  iosBlSidebar?: Maybe<Array<Maybe<SidebarsIosBlSidebar>>>;
  winDaSidebar?: Maybe<Array<Maybe<SidebarsWinDaSidebar>>>;
  winTakSidebar?: Maybe<Array<Maybe<SidebarsWinTakSidebar>>>;
  winBlSidebar?: Maybe<Array<Maybe<SidebarsWinBlSidebar>>>;
  devSidebar?: Maybe<Array<Maybe<SidebarsDevSidebar>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SidebarsDaSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsDaSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsDaSidebarItemsFilter>;
};

export type SidebarsTakSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsTakSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsTakSidebarItemsFilter>;
};

export type SidebarsBlSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsBlSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsBlSidebarItemsFilter>;
};

export type SidebarsIosDaSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsIosDaSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsIosDaSidebarItemsFilter>;
};

export type SidebarsIosTakSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsIosTakSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsIosTakSidebarItemsFilter>;
};

export type SidebarsIosBlSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsIosBlSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsIosBlSidebarItemsFilter>;
};

export type SidebarsWinDaSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsWinDaSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsWinDaSidebarItemsFilter>;
};

export type SidebarsWinTakSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsWinTakSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsWinTakSidebarItemsFilter>;
};

export type SidebarsWinBlSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsWinBlSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsWinBlSidebarItemsFilter>;
};

export type SidebarsDevSidebarItemsFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type SidebarsDevSidebarFilter = {
  type?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  collapsed?: InputMaybe<BooleanFilter>;
  items?: InputMaybe<SidebarsDevSidebarItemsFilter>;
};

export type SidebarsFilter = {
  daSidebar?: InputMaybe<SidebarsDaSidebarFilter>;
  takSidebar?: InputMaybe<SidebarsTakSidebarFilter>;
  blSidebar?: InputMaybe<SidebarsBlSidebarFilter>;
  iosDaSidebar?: InputMaybe<SidebarsIosDaSidebarFilter>;
  iosTakSidebar?: InputMaybe<SidebarsIosTakSidebarFilter>;
  iosBlSidebar?: InputMaybe<SidebarsIosBlSidebarFilter>;
  winDaSidebar?: InputMaybe<SidebarsWinDaSidebarFilter>;
  winTakSidebar?: InputMaybe<SidebarsWinTakSidebarFilter>;
  winBlSidebar?: InputMaybe<SidebarsWinBlSidebarFilter>;
  devSidebar?: InputMaybe<SidebarsDevSidebarFilter>;
};

export type SidebarsConnectionEdges = {
  __typename?: 'SidebarsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Sidebars>;
};

export type SidebarsConnection = Connection & {
  __typename?: 'SidebarsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<SidebarsConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  createFolder: DocumentNode;
  updatePages: Pages;
  createPages: Pages;
  updateDecks: Decks;
  createDecks: Decks;
  updateSidebars: Sidebars;
  createSidebars: Sidebars;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationCreateFolderArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationUpdatePagesArgs = {
  relativePath: Scalars['String']['input'];
  params: PagesMutation;
};


export type MutationCreatePagesArgs = {
  relativePath: Scalars['String']['input'];
  params: PagesMutation;
};


export type MutationUpdateDecksArgs = {
  relativePath: Scalars['String']['input'];
  params: DecksMutation;
};


export type MutationCreateDecksArgs = {
  relativePath: Scalars['String']['input'];
  params: DecksMutation;
};


export type MutationUpdateSidebarsArgs = {
  relativePath: Scalars['String']['input'];
  params: SidebarsMutation;
};


export type MutationCreateSidebarsArgs = {
  relativePath: Scalars['String']['input'];
  params: SidebarsMutation;
};

export type DocumentUpdateMutation = {
  pages?: InputMaybe<PagesMutation>;
  decks?: InputMaybe<DecksMutation>;
  sidebars?: InputMaybe<SidebarsMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  pages?: InputMaybe<PagesMutation>;
  decks?: InputMaybe<DecksMutation>;
  sidebars?: InputMaybe<SidebarsMutation>;
};

export type PagesMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type DecksMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  deckPath?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type SidebarsDaSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsDaSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsDaSidebarItemsMutation>>>;
};

export type SidebarsTakSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsTakSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsTakSidebarItemsMutation>>>;
};

export type SidebarsBlSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsBlSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsBlSidebarItemsMutation>>>;
};

export type SidebarsIosDaSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsIosDaSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsIosDaSidebarItemsMutation>>>;
};

export type SidebarsIosTakSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsIosTakSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsIosTakSidebarItemsMutation>>>;
};

export type SidebarsIosBlSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsIosBlSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsIosBlSidebarItemsMutation>>>;
};

export type SidebarsWinDaSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsWinDaSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsWinDaSidebarItemsMutation>>>;
};

export type SidebarsWinTakSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsWinTakSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsWinTakSidebarItemsMutation>>>;
};

export type SidebarsWinBlSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsWinBlSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsWinBlSidebarItemsMutation>>>;
};

export type SidebarsDevSidebarItemsMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type SidebarsDevSidebarMutation = {
  type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  collapsed?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<SidebarsDevSidebarItemsMutation>>>;
};

export type SidebarsMutation = {
  daSidebar?: InputMaybe<Array<InputMaybe<SidebarsDaSidebarMutation>>>;
  takSidebar?: InputMaybe<Array<InputMaybe<SidebarsTakSidebarMutation>>>;
  blSidebar?: InputMaybe<Array<InputMaybe<SidebarsBlSidebarMutation>>>;
  iosDaSidebar?: InputMaybe<Array<InputMaybe<SidebarsIosDaSidebarMutation>>>;
  iosTakSidebar?: InputMaybe<Array<InputMaybe<SidebarsIosTakSidebarMutation>>>;
  iosBlSidebar?: InputMaybe<Array<InputMaybe<SidebarsIosBlSidebarMutation>>>;
  winDaSidebar?: InputMaybe<Array<InputMaybe<SidebarsWinDaSidebarMutation>>>;
  winTakSidebar?: InputMaybe<Array<InputMaybe<SidebarsWinTakSidebarMutation>>>;
  winBlSidebar?: InputMaybe<Array<InputMaybe<SidebarsWinBlSidebarMutation>>>;
  devSidebar?: InputMaybe<Array<InputMaybe<SidebarsDevSidebarMutation>>>;
};

export type PagesPartsFragment = { __typename: 'Pages', title?: string | null, body?: any | null };

export type DecksPartsFragment = { __typename: 'Decks', title?: string | null, deckPath: string, body?: any | null };

export type SidebarsPartsFragment = { __typename: 'Sidebars', daSidebar?: Array<{ __typename: 'SidebarsDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, takSidebar?: Array<{ __typename: 'SidebarsTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, blSidebar?: Array<{ __typename: 'SidebarsBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosDaSidebar?: Array<{ __typename: 'SidebarsIosDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosTakSidebar?: Array<{ __typename: 'SidebarsIosTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosBlSidebar?: Array<{ __typename: 'SidebarsIosBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winDaSidebar?: Array<{ __typename: 'SidebarsWinDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winTakSidebar?: Array<{ __typename: 'SidebarsWinTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winBlSidebar?: Array<{ __typename: 'SidebarsWinBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, devSidebar?: Array<{ __typename: 'SidebarsDevSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDevSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null };

export type PagesQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type PagesQuery = { __typename?: 'Query', pages: { __typename: 'Pages', id: string, title?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type PagesConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PagesFilter>;
}>;


export type PagesConnectionQuery = { __typename?: 'Query', pagesConnection: { __typename?: 'PagesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PagesConnectionEdges', cursor: string, node?: { __typename: 'Pages', id: string, title?: string | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type DecksQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type DecksQuery = { __typename?: 'Query', decks: { __typename: 'Decks', id: string, title?: string | null, deckPath: string, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type DecksConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DecksFilter>;
}>;


export type DecksConnectionQuery = { __typename?: 'Query', decksConnection: { __typename?: 'DecksConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'DecksConnectionEdges', cursor: string, node?: { __typename: 'Decks', id: string, title?: string | null, deckPath: string, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type SidebarsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type SidebarsQuery = { __typename?: 'Query', sidebars: { __typename: 'Sidebars', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, daSidebar?: Array<{ __typename: 'SidebarsDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, takSidebar?: Array<{ __typename: 'SidebarsTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, blSidebar?: Array<{ __typename: 'SidebarsBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosDaSidebar?: Array<{ __typename: 'SidebarsIosDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosTakSidebar?: Array<{ __typename: 'SidebarsIosTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosBlSidebar?: Array<{ __typename: 'SidebarsIosBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winDaSidebar?: Array<{ __typename: 'SidebarsWinDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winTakSidebar?: Array<{ __typename: 'SidebarsWinTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winBlSidebar?: Array<{ __typename: 'SidebarsWinBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, devSidebar?: Array<{ __typename: 'SidebarsDevSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDevSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null } };

export type SidebarsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SidebarsFilter>;
}>;


export type SidebarsConnectionQuery = { __typename?: 'Query', sidebarsConnection: { __typename?: 'SidebarsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SidebarsConnectionEdges', cursor: string, node?: { __typename: 'Sidebars', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, daSidebar?: Array<{ __typename: 'SidebarsDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, takSidebar?: Array<{ __typename: 'SidebarsTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, blSidebar?: Array<{ __typename: 'SidebarsBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosDaSidebar?: Array<{ __typename: 'SidebarsIosDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosTakSidebar?: Array<{ __typename: 'SidebarsIosTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, iosBlSidebar?: Array<{ __typename: 'SidebarsIosBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsIosBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winDaSidebar?: Array<{ __typename: 'SidebarsWinDaSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinDaSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winTakSidebar?: Array<{ __typename: 'SidebarsWinTakSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinTakSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, winBlSidebar?: Array<{ __typename: 'SidebarsWinBlSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsWinBlSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null, devSidebar?: Array<{ __typename: 'SidebarsDevSidebar', type: string, id?: string | null, label: string, collapsed?: boolean | null, items?: Array<{ __typename: 'SidebarsDevSidebarItems', type?: string | null, id?: string | null, label?: string | null } | null> | null } | null> | null } | null } | null> | null } };

export const PagesPartsFragmentDoc = gql`
    fragment PagesParts on Pages {
  __typename
  title
  body
}
    `;
export const DecksPartsFragmentDoc = gql`
    fragment DecksParts on Decks {
  __typename
  title
  deckPath
  body
}
    `;
export const SidebarsPartsFragmentDoc = gql`
    fragment SidebarsParts on Sidebars {
  __typename
  daSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  takSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  blSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  iosDaSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  iosTakSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  iosBlSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  winDaSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  winTakSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  winBlSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
  devSidebar {
    __typename
    type
    id
    label
    collapsed
    items {
      __typename
      type
      id
      label
    }
  }
}
    `;
export const PagesDocument = gql`
    query pages($relativePath: String!) {
  pages(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PagesParts
  }
}
    ${PagesPartsFragmentDoc}`;
export const PagesConnectionDocument = gql`
    query pagesConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PagesFilter) {
  pagesConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PagesParts
      }
    }
  }
}
    ${PagesPartsFragmentDoc}`;
export const DecksDocument = gql`
    query decks($relativePath: String!) {
  decks(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...DecksParts
  }
}
    ${DecksPartsFragmentDoc}`;
export const DecksConnectionDocument = gql`
    query decksConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: DecksFilter) {
  decksConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...DecksParts
      }
    }
  }
}
    ${DecksPartsFragmentDoc}`;
export const SidebarsDocument = gql`
    query sidebars($relativePath: String!) {
  sidebars(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SidebarsParts
  }
}
    ${SidebarsPartsFragmentDoc}`;
export const SidebarsConnectionDocument = gql`
    query sidebarsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SidebarsFilter) {
  sidebarsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SidebarsParts
      }
    }
  }
}
    ${SidebarsPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      pages(variables: PagesQueryVariables, options?: C): Promise<{data: PagesQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PagesQueryVariables, query: string}> {
        return requester<{data: PagesQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PagesQueryVariables, query: string}, PagesQueryVariables>(PagesDocument, variables, options);
      },
    pagesConnection(variables?: PagesConnectionQueryVariables, options?: C): Promise<{data: PagesConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PagesConnectionQueryVariables, query: string}> {
        return requester<{data: PagesConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PagesConnectionQueryVariables, query: string}, PagesConnectionQueryVariables>(PagesConnectionDocument, variables, options);
      },
    decks(variables: DecksQueryVariables, options?: C): Promise<{data: DecksQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DecksQueryVariables, query: string}> {
        return requester<{data: DecksQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DecksQueryVariables, query: string}, DecksQueryVariables>(DecksDocument, variables, options);
      },
    decksConnection(variables?: DecksConnectionQueryVariables, options?: C): Promise<{data: DecksConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DecksConnectionQueryVariables, query: string}> {
        return requester<{data: DecksConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: DecksConnectionQueryVariables, query: string}, DecksConnectionQueryVariables>(DecksConnectionDocument, variables, options);
      },
    sidebars(variables: SidebarsQueryVariables, options?: C): Promise<{data: SidebarsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarsQueryVariables, query: string}> {
        return requester<{data: SidebarsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarsQueryVariables, query: string}, SidebarsQueryVariables>(SidebarsDocument, variables, options);
      },
    sidebarsConnection(variables?: SidebarsConnectionQueryVariables, options?: C): Promise<{data: SidebarsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarsConnectionQueryVariables, query: string}> {
        return requester<{data: SidebarsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SidebarsConnectionQueryVariables, query: string}, SidebarsConnectionQueryVariables>(SidebarsConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: {
      branch?: string,
      /**
       * Aside from `method` and `body`, all fetch options are passed
       * through to underlying fetch request
       */
      fetchOptions?: Omit<Parameters<typeof fetch>[1], 'body' | 'method'>,
    },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    }, options)

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "https://content.tinajs.io/1.5/content/81a9ce6c-1103-40cf-99ff-53b81476a75d/github/main",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
) => {
  const requester = generateRequester(client)
  return getSdk(requester)
}

  